<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <artifactId>osdu-gcp-service-search</artifactId>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
          <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
        </configuration>
        <dependencies>
          <dependency>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <groupId>org.springframework.boot</groupId>
            <version>2.1.7.RELEASE</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <configuration>
              <transformers>
                <transformer>
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer>
                  <resource>META-INF/spring.factories</resource>
                </transformer>
                <transformer>
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
                <transformer/>
                <transformer>
                  <mainClass>com.osdu.SchemaMapperApplication</mainClass>
                </transformer>
              </transformers>
            </configuration>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <artifactId>mapstruct-processor</artifactId>
              <groupId>org.mapstruct</groupId>
              <version>${org.mapstruct.version}</version>
            </path>
            <path>
              <artifactId>lombok</artifactId>
              <groupId>org.projectlombok</groupId>
              <version>${org.projectlombok.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <compilerArg>-Amapstruct.defaultComponentModel=jsr330</compilerArg>
          </compilerArgs>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
        <version>3.6.1</version>
      </plugin>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <groupId>org.springframework.boot</groupId>
      </plugin>
      <plugin>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <configuration>
          <buildArgs>
            <JAR_FILE>./target/${artifactId}-${version}-exec.jar</JAR_FILE>
          </buildArgs>
          <repository>${docker.image.prefix}/${project.artifactId}</repository>
        </configuration>
        <groupId>com.spotify</groupId>
        <version>1.4.10</version>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>com.osdu</groupId>
      <artifactId>osdu-gcp-common</artifactId>
      <version>1.0.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-dependencies</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>import</scope>
      <type>pom</type>
      <version>2.1.6.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-function-web</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <scope>provided</scope>
      <version>1.0.1.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-function-context</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <scope>provided</scope>
      <version>2.0.2.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-boot-test</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-boot-test-autoconfigure</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
        <exclusion>
          <artifactId>json-path</artifactId>
          <groupId>com.jayway.jsonpath</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
        <exclusion>
          <artifactId>assertj-core</artifactId>
          <groupId>org.assertj</groupId>
        </exclusion>
        <exclusion>
          <artifactId>mockito-core</artifactId>
          <groupId>org.mockito</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hamcrest-library</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jsonassert</artifactId>
          <groupId>org.skyscreamer</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-test</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>xmlunit-core</artifactId>
          <groupId>org.xmlunit</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
      <version>2.1.7.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>javax.inject</artifactId>
      <groupId>javax.inject</groupId>
      <scope>provided</scope>
      <version>1</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <scope>provided</scope>
      <version>2.1.2.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <scope>provided</scope>
      <version>2.1.2.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-dependencies</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <scope>import</scope>
      <type>pom</type>
      <version>Greenwich.SR2</version>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <scope>provided</scope>
      <version>1.18.8</version>
    </dependency>
    <dependency>
      <artifactId>mapstruct</artifactId>
      <groupId>org.mapstruct</groupId>
      <scope>provided</scope>
      <version>1.3.0.Final</version>
    </dependency>
    <dependency>
      <artifactId>json</artifactId>
      <groupId>org.json</groupId>
      <scope>provided</scope>
      <version>20190722</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>provided</scope>
      <version>2.1.7.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-function-web</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <scope>provided</scope>
      <version>2.0.2.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>httpclient</artifactId>
      <groupId>org.apache.httpcomponents</groupId>
      <scope>provided</scope>
      <version>4.3.4</version>
    </dependency>
    <dependency>
      <artifactId>spring-security-test</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-security-core</artifactId>
          <groupId>org.springframework.security</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-security-web</artifactId>
          <groupId>org.springframework.security</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-test</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.security</groupId>
      <scope>test</scope>
      <version>4.0.0.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>jackson-annotations</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
      <scope>provided</scope>
      <version>2.10.0.pr1</version>
    </dependency>
    <dependency>
      <artifactId>jackson-core</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
      <scope>provided</scope>
      <version>2.10.0.pr1</version>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>spring-cloud-dependencies</artifactId>
        <groupId>org.springframework.cloud</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${spring-cloud.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <description>Search service working with data in OSDU format</description>
  <modelVersion>4.0.0</modelVersion>
  <name>search-service</name>
  <parent>
    <artifactId>osdu-gcp-service</artifactId>
    <groupId>com.osdu</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <properties>
    <docker.image.prefix>springio</docker.image.prefix>
  </properties>
  <version>1.0.1-SNAPSHOT</version>
</project>
